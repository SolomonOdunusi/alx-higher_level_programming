# 100-matrix_mul.txt

# 100-matrix_mul.py testcases

Usage: python3 -m doctest -v ./tests/100-matrix_mul.txt

matrix_mul: func multiply 2 matrix

*

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

*

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

*

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4], [5, 6]])
    [[22, 28], [49, 64]]

*

    >>> matrix_mul([[3, 3]], [[3, 3], [3, 3]])
    [[18, 18]]


*

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

*

    >>> print(matrix_mul("str not list", [[1, 2]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list

*

    >>> print(matrix_mul([[1, 2]], "str not list"))
    Traceback (most recent call last):
    TypeError: m_b must be a list

*

    >>> print(matrix_mul("not a list", "str not list"))
    Traceback (most recent call last):
    TypeError: m_a must be a list

*

    >>> print(matrix_mul(None, None))
    Traceback (most recent call last):
    TypeError: m_a must be a list

Not just any list - they *must* be lists of lists!

*

    >>> print(matrix_mul([1, 2], [[3, 4]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

*

    >>> print(matrix_mul([[1, 2]], [3, 4]))
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

*

    >>> print(matrix_mul([1, 2], [3, 4]))
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

And not just any list of lists - they *must* be lists of lists containing
integers or floats!

*

    >>> print(matrix_mul([[1, "non-number"]], [[2, 3]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

*

    >>> print(matrix_mul([[1, 2]], [[{"list": 1}, 3.4]]))
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

*

    >>> print(matrix_mul([[1, "non-number"]], [[{"list": 1}, 3.4]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats


*

    >>> m_a = [
    ... [1, 2],
    ... [3, 4, 5]
    ... ]
    >>> m_b = [
    ... [1, 2],
    ... [3, 4]
    ... ]
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    TypeError: each row of m_a must should be of the same size

*

    >>> m_a = [
    ... [1, 2],
    ... [3, 4]
    ... ]
    >>> m_b = [
    ... [1, 2],
    ... [3, 4, 5]
    ... ]
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    TypeError: each row of m_b must should be of the same size

*

    >>> m_a = [
    ... [1, 2],
    ... [3, 4, 5]
    ... ]
    >>> m_b = m_a
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    TypeError: each row of m_a must should be of the same size
